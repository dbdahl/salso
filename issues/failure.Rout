
R Under development (unstable) (2020-02-11 r77792) -- "Unsuffered Consequences"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(salso)
> library(mcclust.ext)
Loading required package: mcclust
Loading required package: lpSolve

Attaching package: ‘mcclust’

The following objects are masked from ‘package:salso’:

    arandi, binder, pear, vi.dist


Attaching package: ‘mcclust.ext’

The following object is masked from ‘package:salso’:

    VI.lb

> 
> load("probs.Rbin")
> probs
        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]
 [1,] 1.0000 0.3975 0.0752 0.0319 0.0158 0.0001 0.0001 0.0001 0.0001
 [2,] 0.3975 1.0000 0.1399 0.0791 0.0487 0.0001 0.0001 0.0001 0.0001
 [3,] 0.0752 0.1399 1.0000 0.4077 0.3560 0.0001 0.0001 0.0001 0.0001
 [4,] 0.0319 0.0791 0.4077 1.0000 0.4093 0.0001 0.0001 0.0001 0.0001
 [5,] 0.0158 0.0487 0.3560 0.4093 1.0000 0.0001 0.0001 0.0001 0.0001
 [6,] 0.0001 0.0001 0.0001 0.0001 0.0001 1.0000 0.0112 0.0111 0.0003
 [7,] 0.0001 0.0001 0.0001 0.0001 0.0001 0.0112 1.0000 0.2617 0.0842
 [8,] 0.0001 0.0001 0.0001 0.0001 0.0001 0.0111 0.2617 1.0000 0.0995
 [9,] 0.0001 0.0001 0.0001 0.0001 0.0001 0.0003 0.0842 0.0995 1.0000
> 
> # VI.lb
> 
> a <- salso(probs)$estimate
Warning message:
In salso(probs) :
  86% of the subsets are singletons.  For the sake of interpretability, consider using the 'maxSize' argument.
> b <- minVI(probs, method="greedy")$cl   # But they don't
> d <- salso:::minimize.by.enumeration(probs)
> 
> VI.lb(d, probs)   # Global minimum
[1] 0.563926
> VI.lb(a, probs)   # SALSO gets it
[1] 0.563926
> VI.lb(b, probs)   # W & G don't
[1] 0.5911779
> 
> all.equal(d,a)
[1] TRUE
> all.equal(d,b)
[1] "Mean relative difference: 0.3928571"
> 
> 
> 
> 
> 
> seed <- runif(1,0,.Machine$integer.max)
> set.seed(seed)
> 
> n <- 4
> partitions <- salso::enumerate.partitions(n)
> nPartitions <- nrow(partitions)
> adjMatrices <- lapply(lapply(asplit(partitions,1), as.vector), salso:::mkAdjacencyMatrix)
> 
> mkPSM <- function() {
+   x <- diff(c(0,sort(runif(nPartitions-1)),1))
+   y <- mapply(function(x,y) x * y, x, adjMatrices, SIMPLIFY=FALSE)
+   list(weights=x, probs=Reduce("+", y))
+ }
> 
> while ( TRUE ) {
+   x <- mkPSM()
+   a <- suppressWarnings(salso(x$probs, loss="binder")$estimate)
+   if ( max(a) < 2 ) next
+   b1 <- minbinder(x$probs, method="laugreen")$cl
+   if ( isTRUE(all.equal(a,b1)) ) next
+   b2 <- minbinder.ext(x$probs, method="greedy")$cl
+   if ( isTRUE(all.equal(a,b2)) ) next
+   b3 <- minbinder(x$probs, method="avg", max.k=n)$cl
+   if ( isTRUE(all.equal(a,b3)) ) next
+   b4 <- minbinder(x$probs, method="comp", max.k=n)$cl
+   if ( isTRUE(all.equal(a,b4)) ) next
+   break
+ }
> 
> binder(a,x$probs)
[1] 2.800814
> binder(b1,x$probs)
[1] 2.806241
> binder(b2,x$probs)
[1] 2.806241
> binder(b3,x$probs)
[1] 2.806241
> binder(b4,x$probs)
[1] 2.806241
> 
> d <- salso:::minimize.by.enumeration(x$probs, loss="binder")
> binder(d,x$probs)
[1] 2.800814
> 
> x$seed <- seed
> x$salso <- a
> x$lg <- b1
> x$wg <- b2
> x$avg <- b3
> x$comp <- b4
> x$enum <- d
> x$adjMatrices <- adjMatrices
> 
> saveRDS(x,sprintf("only-salso-wins-%s.rds",runif(1,0,100000)))
> 
> 
> proc.time()
   user  system elapsed 
  6.361   1.055   5.450 
