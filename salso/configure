#!/bin/sh

cat <<'EOF' | "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -

source("tools/cargo_run.R")

setwd("src/rust")
if ( ! dir.exists("vendor") ) untar("vendor.tar.xz", tar="internal")

if ( .Platform$OS.type == "windows" ) {
  print(list.files("c:\\"))
  Sys.setenv(PATH=paste0("c:\\rtools40\\ucrt64\\bin;",Sys.getenv("PATH")))i
  Sys.setenv(CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER="gcc")
}

con <- file("../../inst/cargo.log", "w")
if ( run('build', '--offline', '--release', '--jobs', '2', minimum_version='../..', leave_no_trace=TRUE, verbose=con) == 0 ) {

    file.copy("target/release/librust.a", "..", overwrite=TRUE)
    message("Built Rust static library.")

} else {

    message("No suitable version of Cargo was found.\n")
    if ( ( Sys.getenv("MY_UNIVERSE","<unset>") == "<unset>" ) && ( Sys.getenv("NOT_CRAN","<unset>") == "<unset>" ) ) {
        message("Please run 'install()' from the 'cargo' package, or set the environment variable 'NOT_CRAN'.\n")
    } else {
        message("Downloading prebuild static library.\n")
        desc <- read.dcf("../../DESCRIPTION")
        url_base <- "https://dahl.byu.edu/public"
        url <- file.path(url_base, "r_cargo_cross_compile", desc[,"Package"], desc[,"Version"], target(), "librust.a")
        download.file(url, "../librust.a")
    }

}
close(con)

EOF
