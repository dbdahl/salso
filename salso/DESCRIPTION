Package: salso
Type: Package
Title: Search Algorithms and Loss Functions for Bayesian Clustering
Version: 0.3.28
Authors@R: c(person(given = "David B.", family = "Dahl", role = c("aut", "cre"), email = "dahl@stat.byu.edu", comment = c(ORCID = "0000-0002-8173-1547")), 
    person(given = "Devin J.", family = "Johnson", role = c("aut"), email = "devin.j.johnson7@gmail.com", comment = c(ORCID = "0000-0003-2619-6649")), 
    person(given = "Peter", family = "Müller", role = c("aut"), email = "pmueller@math.utexas.edu"), 
    person(given = "Alex", family = "Crichton", email = "alex@alexcrichton.com", role = "cph", comment = "Rust crates: proc-macro2, cfg-if. See AUTHORS file."),
    person(given = "\"bluss\" Ulrik", family = "Sverdrup", role = "cph", comment = "Rust crate: rawpointer, matrixmultiply, scopeguard, ndarray. See AUTHORS file."),
    person(given = "Brendan", family = "Zabarauskas", email = "bjzaba@yahoo.com.au", role = "cph", comment = "Rust crate: approx. See AUTHORS file."),
    person(given = "David B.", family = "Dahl", email = "dahl@stat.byu.edu", role = "cph", comment = "Rust crates: roxido, roxido_macro, dahl-partition, dahl-salso, dahl-bellnumber. See AUTHORS file."),
    person(given = "David", family = "Tolnay", email = "dtolnay@gmail.com", role = "cph", comment = "Rust crates: syn, proc-macro2, quote, unicode-ident. See AUTHORS file."),
    person(given = "DutchGhost", role = "cph", comment = "Rust crate: matrixmultiply. See AUTHORS file."),
    person(given = "Enthought, Inc.", role = "cph", comment = "Rust crate: ndarray. See AUTHORS file."),
    person(given = "Gilad", family = "Naaman", email = "gilad.naaman@gmail.com", role = "cph", comment = "Rust crate: memoffset. See AUTHORS file."),
    person(given = "Jim", family = "Turner", role = "cph", comment = "Rust crate: ndarray. See AUTHORS file."),
    person(given = "Josh", family = "Stone", email = "cuviper@gmail.com", role = "cph", comment = "Rust crate: autocfg. See AUTHORS file."),
    person(given = "Melissa", family = "O'Neill", role = "cph", comment = "Rust crate: rand_pcg. See AUTHORS file."),
    person(given = "Paul", family = "Dicker", role = "cph", comment = "Rust crate: rand_pcg. See AUTHORS file."),
    person(given = "PCG Project contributors", role = "cph", comment = "Rust crate: rand_pcg. See AUTHORS file."),
    person(given = "Ralf", family = "Jung", role = "cph", comment = "Rust crate: memoffset. See AUTHORS file."),
    person(given = "rawpointer developers", role = "cph", comment = "Rust crate: rawpointer. See AUTHORS file."),
    person(given = "R. Janis", family = "Goldschmidt", role = "cph", comment = "Rust crate: matrixmultiply. See AUTHORS file."),
    person(given = "SciPy Developers", role = "cph", comment = "Rust crate: ndarray. See AUTHORS file."),
    person(given = "Sean", family = "McArthur", email = "sean@seanmonstar.com", role = "cph", comment = "Rust crate: num_cpus. See AUTHORS file."),
    person(given = "Stefan", family = "Lankes", role = "cph", comment = "Rust crate: hermit-abi. See AUTHORS file."),
    person(given = "The Cranelift Project Developers", role = "cph", comment = "Rust crate: wasi. See AUTHORS file."),
    person(given = "The Crossbeam Project Developers", role = "cph", comment = "Rust crates: crossbeam, crossbeam-channel, crossbeam-deque, crossbeam-epoch, crossbeam-queue, crossbeam-utils. See AUTHORS file."),
    person(given = "The CryptoCorrosion Contributors", role = "cph", comment = "Rust crates: ppv-lite86, rand_chacha. See AUTHORS file."),
    person(given = "The Go Authors", role = "cph", comment = "Rust crate: crossbeam-channel. See AUTHORS file."),
    person(given = "The PCG Project Contributors", role = "cph", comment = "Rust crate: rand_pcg. See AUTHORS file."),
    person(given = "The matrixmultiply Authors", role = "cph", comment = "Rust crate: matrixmultiply. See AUTHORS file."),
    person(given = "The ndarray Developers", role = "cph", comment = "Rust crate: ndarray. See AUTHORS file."),
    person(given = "The Rand Project Developers", role = "cph", comment = "Rust crates: rand_core, rand_chacha, rand_pcg, rand, getrandom. See AUTHORS file."),
    person(given = "The Rust Project Developers", role = "cph", comment = "Rust crates: crossbmean-channel, rand_chacha, num-bigint, num-integer, rand_core, num-complex, libc, num-traits, rand. See AUTHORS file."),
    person(given = "The scopeguard Developers", role = "cph", comment = "Rust crates: scopeguard. See AUTHORS file."),
    person(given = "Unicode, Inc.", role = "cph", comment = "Rust crate: unicode-ident. See AUTHORS file.")
    )
Description: The SALSO algorithm is an efficient randomized greedy search method to find a point estimate for a random partition based on a loss function and posterior Monte Carlo samples. The algorithm is implemented for many loss functions, including the Binder loss and a generalization of the variation of information loss, both of which allow for unequal weights on the two types of clustering mistakes. Efficient implementations are also provided for Monte Carlo estimation of the posterior expected loss of a given clustering estimate. See Dahl, Johnson, Müller (2022) <doi:10.1080/10618600.2022.2069779>.
License: MIT + file LICENSE | Apache License 2.0
BugReports: https://github.com/dbdahl/salso/issues
Depends: R (>= 4.2.0)
SystemRequirements: Cargo (>= 1.56) (Rust's package manager), rustc
Encoding: UTF-8
LazyData: TRUE
Roxygen: list(markdown = TRUE)
RoxygenNote: 7.2.3
