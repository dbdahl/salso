% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/salso.R
\name{salso}
\alias{salso}
\title{Sequentially-Allocated Latent Structure Optimization}
\usage{
salso(
  x,
  loss = "VI",
  maxSize = 0,
  nRuns = 100,
  seconds = Inf,
  maxScans = 10,
  probEmptyCluster = 0.5,
  parallel = TRUE
)
}
\arguments{
\item{x}{Either: 1. A \eqn{B}-by-\eqn{n} matrix, where each of the \eqn{B}
rows represents a clustering of \eqn{n} items using cluster labels. (For
clustering \eqn{b}, items \eqn{i} and \eqn{j} are in the same cluster if
\code{x[b,i] == x[b,j]}.), or 2. A pairwise similarity matrix, i.e.,
\eqn{n}-by-\eqn{n} symmetric matrix whose \eqn{(i,j)} element gives the
(estimated) probability that items \eqn{i} and \eqn{j} are in the same
subset (i.e., cluster) of a partition (i.e., clustering).}

\item{loss}{One of \code{"binder"}, \code{"omARI"}, \code{"omARI.approx"},
\code{"VI"}, or \code{"VI.lb"}.  See \code{\link{partition.loss}} for
details on these loss functions.}

\item{maxSize}{The maximum number of subsets (i.e., clusters).  The
optimization is constrained to produce solutions whose number of subsets is
no more than the supplied value. If zero, the following default is used. If
\code{x} is a pairwise similarity matrix, \code{20} is used for
\code{maxSize}.  Otherwise, \code{maxSize} is two standard deviations above
the mean number of subsets in \code{x}, rounding up to the nearest integer.}

\item{nRuns}{The number of runs to try, although the actual number by differ
for the following reasons: 1. The actual number is a multiple of the number
of cores when \code{parallel=TRUE}, and 2. The search is curtailed when the
\code{seconds} threshold is exceeded.}

\item{seconds}{A time threshold in seconds after which the function will be
curtailed (with a warning) instead of performing all the requested number
of permutations. Note that the function could take longer because the
threshold is only checked after each permutation is completed.}

\item{maxScans}{The maximum number of reallocation scans after the initial
sequential allocation. The actual number of scans may be less than
\code{maxScans} since the method stops if the result does not change
between scans.}

\item{probEmptyCluster}{During initial allocation, the probability of
unilaterally allocating an item to an empty subset (if the \code{maxSize}
is not yet reached).}

\item{parallel}{Should the search use all CPU cores?}
}
\value{
A list of the following elements: \describe{ \item{estimate}{An
  integer vector giving a partition encoded using cluster labels.}
  \item{loss}{A character vector equal to the \code{loss} argument.}
  \item{expectedLoss}{A numeric vector of length one giving the expected
  loss.} \item{nScans}{An integer vector giving the number of scans used to
  arrive at the supplied estimate.} \item{probExploration}{The probability of
  picking the second best micro-optimization (instead of the best) for the
  permutation yielding the supplied estimate.} \item{nRuns}{An
  integer giving the number of permutations actually performed.}}
}
\description{
This function provides a partition to summarize a partition distribution
using the sequentially-allocated latent structure optimization (SALSO)
method. The implementation currently supports the minimization of several
partition estimation criteria. For details on these criteria, see
\code{\link{partition.loss}}.
}
\details{
The SALSO method was first presented at the workshop "Bayesian Nonparametric
Inference: Dependence Structures and their Applications" in Oaxaca, Mexico on
December 6, 2017. See
<https://www.birs.ca/events/2017/5-day-workshops/17w5060/schedule>.
}
\examples{
# For examples, use 'parallel=FALSE' per CRAN rules but, in practice, omit this.

draws <- iris.clusterings
salso(draws, loss="VI", nRuns=1, parallel=FALSE)

probs <- psm(draws, parallel=FALSE)
salso(probs, loss="VI.lb", parallel=FALSE)
salso(draws, loss="VI.lb", parallel=FALSE)

}
\seealso{
\code{\link{partition.loss}}, \code{\link{psm}},
  \code{\link{confidence}}, \code{\link{dlso}}
}
